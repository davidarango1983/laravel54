{"version":3,"sources":["imagenes.js"],"names":[],"mappingsfile":"imagenes.js","sourcesContent":["/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\nhref = window.location.href;\r\nhref2 = href.substring(0, href.length - 14);\r\n\r\n$(document).ready(function () {\r\n\r\n    /*\r\n     * Colocamos en todas las cabecerras de las peticiones post que se realizan mediante ajax\r\n     * el valor del token CSRF, que garantiza la privacidad de nuestras peticiones\r\n     * \r\n     */\r\n    $.ajaxPrefilter(function (options, originalOptions, xhr) {\r\n        var token = $('meta[name=\"csrf-token\"]').attr('content');\r\n        if (token) {\r\n            return xhr.setRequestHeader('X-CSRF-TOKEN', token);\r\n        }\r\n    });\r\n    $('#imagenes').addClass('active');\r\n    $(function () {\r\n        $('#imagenes-table').DataTable({\r\n            retrieve: true,\r\n            processing: true,\r\n            serverSide: true,\r\n            \"ajax\": {\r\n                \"url\": \"imagenes\",\r\n                'type': 'POST'\r\n            },\r\n            columns: [\r\n                {data: 'id', name: 'id', \"className\": \"col-xs-1\"},\r\n                {data: 'title', name: 'title', \"className\": \"col-xs-1\"},\r\n                {data: 'alt', name: 'alt', \"className\": \"col-xs-1\"},\r\n                {data: 'publicado', name: 'publicado', \"className\": \"col-xs-1\",\r\n                    'render': function () {\r\n                        return (arguments[0] === '1') ? 'SI' : 'NO';\r\n                    }\r\n                },\r\n                {data: 'urlimg', name: 'urlimg', \"className\": \"col-xs-1\",\r\n                    'render': function () {\r\n                        /*añadimos las clases editarbtn y borrarbtn para procesar los eventos click de los botones. No lo hacemos mediante id ya que habrá más de un botón de edición o borrado*/\r\n                        return \"<img width='200' src='\" + href2 + '/images/' + arguments[0] + \"' <img>\";\r\n\r\n                    }},\r\n                {data: 'urlimg', name: 'urlimg', \"className\": \"col-xs-1\"},\r\n                {'data': \"id\", \"className\": \"col-xs-2\",\r\n                    'render': function () {\r\n                        /*añadimos las clases editarbtn y borrarbtn para procesar los eventos click de los botones. No lo hacemos mediante id ya que habrá más de un botón de edición o borrado*/\r\n                        return \"<a href='editarimagen/\" + arguments[0] + \"' class='editar btn btn-sm btn-warning ' >Editar</a><span> </span><button class='borrarbtn btn btn-xs btn-danger'>Borrar</button>\";\r\n\r\n                    }\r\n                }\r\n\r\n            ],\r\n            'language': {\r\n                \"url\": \"/spanish\"\r\n\r\n            },\r\n            \"oAria\": {\r\n                \"sSortAscending\": \": Activar para ordenar la columna de manera ascendente\",\r\n                \"sSortDescending\": \": Activar para ordenar la columna de manera descendente\"\r\n            }\r\n        });\r\n\r\n    });\r\n\r\n\r\n\r\n    $('#imagenes-table').on('click', '.borrarbtn', function (e) {\r\n        var miTabla = $('#imagenes-table').DataTable();\r\n        e.preventDefault();\r\n        var nRow = $(this).parents('tr')[0];\r\n        var aData = miTabla.row(nRow).data();\r\n        var id = aData.id;\r\n        //$(this).closest('tr').hide('slow');\r\n        $.ajax({\r\n            /*si ponemos como type delete no lo recogeríamos en $_REQUEST, así que queda como POST*/\r\n            type: 'post',\r\n            url: 'eliminarimagen/' + id,\r\n            //estos son los datos que queremos actualizar, en json:\r\n            data: {\r\n                id: id\r\n            },\r\n            error: function (status, error) {\r\n                //mostraríamos alguna ventana de alerta con el error\r\n                alert(status, error);\r\n            },\r\n            success: function (data) {\r\n                //obtenemos el mensaje del servidor, es un array!!!\r\n                //var mensaje = (data[\"mensaje\"]) //o data[0], en función del tipo de array!!\r\n                //actualizamos datatables:\r\n\r\n                //retrieve recupera los datos, si no lo ponemos, hasta que no refrescamos la página no se actualiza\r\n                /*para volver a pedir vía ajax los datos de la tabla*/\r\n                miTabla.draw();\r\n\r\n\r\n                var options = {\r\n                    \"icon\": 'gymzone', //Icon class - false / string - see provided CSS\r\n                    \"title\": 'Administración', //Show title - false / string\r\n                    \"cls\": \"eliminado\", //Additional container class\r\n                    \"speed\": 200, //Fade-in / out animation speed\r\n                    \"timeout\": 3000 //Timeout before notification disappears    \r\n                };\r\n                $.Growl.show(data, options);\r\n            },\r\n            complete: {\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\n"]}